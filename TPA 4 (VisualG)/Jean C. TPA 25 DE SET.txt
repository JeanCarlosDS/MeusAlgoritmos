Jean C.
1° DS

1- Algoritmo "SomaVetores"
Var
   vet1: vetor[1..5] de real
   vet2: vetor[1..5] de real
   soma: vetor[1..5] de real
   i: inteiro
Inicio
   para i de 1 ate 5 faca
      Escreva("Digite o primeiro valor para a",i," posição do vetor: ")
      leia (vet1[i])
      Escreva("Digite o segundo valor para a",i," posição do vetor: ")
      leia (vet2[i])
      soma[i] <- vet1[i]+vet2[i]
      limpatela
   fimpara
   para i de 1 ate 5 faca
      escreval("O valor da ",i," posição é: ",soma[i])
   fimpara
Fimalgoritmo

2- Algoritmo "5Valores"
Var
   num: vetor[1..5] de inteiro
   i: inteiro
Inicio
   para i de 1 ate 5 faca
      escreva("Escreva o",i," valor: ")
      leia(num[i])
   fimpara
   limpatela
   escreval()
   escreval("Numeros inversos:")
   para i de 5 ate 1 passo -1 faca
      escreva(num[i])
   fimpara
   escreval()
   escreval("Numeros quadrados:")
   para i de 1 ate 5 faca
      escreva(num[i]*num[i])
   fimpara
   escreval()
   escreval("Numeros maiores que 3:")
   para i de 1 ate 5 faca
      se (num[i]>3) entao
         escreva(num[i])
      fimse
   fimpara
   escreval()
   escreval("Numeros pares:")
   para i de 1 ate 5 faca
      se (num[i] % 2 = 0) entao
         escreva(num[i])
      fimse
   fimpara
Fimalgoritmo

3- algoritmo "Posição do Maior"
var
   vet: vetor [1..10] de inteiro
   i,ma,posma:inteiro
inicio
   para i de 1 ate 10 faca
      escreva("Escreva o ",i,"º número: ")
      leia(vet[i])
   fimPara
   ma<-vet[1]
   posma<-1
   para i de 2 ate 10 faca
      se ma < vet[i] então
         ma<-vet[i]
         posma<-i
      fimse
   fimPara
   escreval("O maior elemento do vetor é", ma," e está na posição",posma)
Fimalgoritmo

4- Algoritmo "Numeros Aleátorios"
Var
   vet1, vet2: vetor[0..9] de inteiro
   i, num: inteiro
Inicio
   para i de 0 ate 9 faca
      vet1[i] <- int(rand*10)
      escreva("Digite o",i,"° numero: ")
      leia(vet2[i])
   fimpara
   para i de 0 ate 9 faca
      escreval("Indice",i,": Numero aleatorio {",vet1[i],"} + Numero digitado {",vet2[i],"} = ",vet1[i]+vet2[i])
   fimpara
Fimalgoritmo

5- Algoritmo "Nota Alunos"
Var
   nota: vetor[1..5] de inteiro
   i, ma, me: inteiro
   passou, reprovou: inteiro
Inicio
   para i de 1 ate 5 faca
      escreval("Aluno: ",i)
      escreva("Nota: ")
      leia(nota[i])
      ma<-nota[1]
      me<-nota[1]
      limpatela
   fimpara
   para i de 2 ate 5 faca
      se me > nota[i] então
         me<-nota[i]
      fimSe
   fimPara
   para i de 2 ate 5 faca
      se ma < nota[i] então
         ma<-nota[i]
      fimse
   fimPara
   passou <- 0
   reprovou <- 0
   para i de 1 ate 5 faca
      se nota[i] >= 5 entao
         passou <- passou + 1
      senao nota[i] <= 5 entao
         reprovou  <- reprovou + 1
      fimse
   fimpara
   escreval("LISTA DE NOTAS")
   escreval("----------------------")
   para i de 1 ate 5 faca
      escreval()
      escreval("Aluno: ",i)
      escreva("Nota: ",nota[i]:4)
      escreval()
   fimPara
   escreval()
   escreval("A menor nota foi: ",me)
   escreval("A maior nota foi: ",ma)
   escreval()
   escreval("Alunos que passaram: ",passou)
   escreval("Alunos que reprovaram: ",reprovou)
Fimalgoritmo

6- Algoritmo "Vezes numero aparece"
Var
   vet: vetor[1..10] de inteiro
   i, num: inteiro
Inicio
   num <- 0
   para i de 1 ate 10 faca
      escreva("Escreva o ",i,"º número: ")
      leia(vet[i])
      se (vet[i] = -1) entao
         fimalgoritm
      fimse
   fimPara
   para i de 1 ate 10 faca
      se vet[i] = 1 entao
         se vet[i+1] = 3 entao
            se vet[i+2] = 4 entao
               num <- num + 1
            fimse
         fimse
      fimse
   fimpara
   escreval("Os numeros 1, 3 e 4 foram digitados sequencialmente",num," vezes.")
Fimalgoritmo

7- Algoritmo "Elementos Comuns"
Var
   vetA: vetor[1..5] de inteiro
   vetB: vetor[1..8] de inteiro
   comum: vetor[1..8] de inteiro
   i, o: inteiro
Inicio
   escreval()
   para i de 1 ate 5 faca
      escreva("Digite o",i,"° número do vetor A: ")
      leia(vetA[i])
   fimpara
   limpatela
   para i de 1 ate 8 faca
      escreva("Digite o",i,"° número do vetor B: ")
      leia(vetB[i])
   fimpara
   limpatela
   para i de 1 ate 5 faca
      se (vetA[i] <> vetB[i]) entao
         comum[i] <- vetB[i]
         escreval("O elemento",comum[i]," é comum nos dois vetores.")
      fimse
   fimpara
Fimalgoritmo

8- Algoritmo "Matriz 3x3"
Var
   vet: vetor[1..3,1..3] de inteiro
   i, o: inteiro
Inicio
   para i de 1 ate 3 faca
      para o de 1 ate 3 faca
         escreva("Posição",i,";",o,": ")
         leia(vet[i,o])
      fimpara
   fimpara
   para i de 1 ate 3 faca
      para o de 1 ate 3 faca
         escreva(vet[i,o]:3)
      fimpara
      escreval()
   fimpara
Fimalgoritmo

9- Algoritmo "Matriz 5x5"
Var
   vet: vetor[1..5,1..5] de inteiro
   i, o, linha, coluna: inteiro
   sair: logico
Inicio
   para i de 1 ate 5 faca
      para o de 1 ate 5 faca
         vet[i,o] <- int(rand*100)
      fimpara
   fimpara
   escreval("Caso deseja sair, digite 0,0")
   repita
      para i de 1 ate 5 faca
         para o de 1 ate 5 faca
            se (vet[i,o]>9) entao
               escreva(vet[i,o]:8)
            senao
               escreva(vet[i,o]:8)
            fimse
         fimpara
         escreval()
      fimpara
      sair <- falso
      escreval()
      escreva("Digite a linha que deseja verificar o valor: ")
      leia(linha)
      escreva("Agora digite a coluna: ")
      leia(coluna)
      se ((linha=0) e (coluna=0)) entao
         sair <- verdadeiro
      senao
         escreval ("O valor desse bloco é ",vet[linha,coluna])
         escreval()
      fimse
   ate (sair)
Fimalgoritmo

10- Algoritmo "Cadeiras"
Var
   vet: vetor[1..9,1..9] de caracter
   i, o, linha, coluna: inteiro
   sair: logico
Inicio
   para i de 1 ate 9 faca
      para o de 1 ate 9 faca
         vet[i,o] <- "."
      fimpara
   fimpara
   escreval("Caso deseja sair, digite um local inexistente.")
   repita
      escreva("   1 2 3 4 5 6 7 8 9")
      escreval()
      para i de 1 ate 9 faca
         escreva(i," ")
         para o de 1 ate 9 faca
            escreva(vet[i,o]," ")
         fimpara
         escreval()
      fimpara
      sair <- falso
      escreval()
      escreva("Digite a linha da cadeira que deseja: ")
      leia(linha)
      escreva("Agora digite a coluna: ")
      leia(coluna)
      se ((linha < 1)ou(linha > 9)) ou ((coluna < 1)ou(coluna > 9)) entao
         sair <- verdadeiro
      senao
         se (vet[linha,coluna]=".") entao
            vet[linha,coluna]<-"X"
            escreval("Cadeira reservada.")
            escreval()
         senao
            escreval("Essa cadeira já foi reservada.")
            escreval()
         fimse
      fimse
   ate(sair)
Fimalgoritmo